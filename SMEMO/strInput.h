//==============================================================
// 文字列入力関連
// STEAR 2009
//--------------------------------------------------------------
// 汎用１ライン文字列入力。
//--------------------------------------------------------------

#ifndef StrInput_H
#define StrInput_H

//----- 構造体 -----

typedef struct strInpHis_s{
	struct strInpHis_s	*chain;
	int					save;
	char				*text;
} strInpHis;

//----- プロトタイプ宣言 -----

//==============================================================
// 入力履歴の全削除
//--------------------------------------------------------------
// inphis 入力履歴
//--------------------------------------------------------------
// 入力履歴用のメモリを解放します。
//--------------------------------------------------------------

void		InputHisFree(strInpHis **inphis);


//==============================================================
// 入力履歴の読み込み
//--------------------------------------------------------------
// path   入力履歴ファイル
// 戻り値 入力履歴へのポインタ
//--------------------------------------------------------------
// 入力履歴用のメモリを確保し、指定ファイル内の履歴をセットする。
// ファイルが読めなかった場合はメモリだけ確保します。
// これで入力履歴用のメモリを確保しないと入力履歴機能が使えません。
//--------------------------------------------------------------

strInpHis	**InputHisLoad(char *path);


//==============================================================
// 入力履歴の保存
//--------------------------------------------------------------
// path   入力履歴保存ファイル名
// inphis 入力履歴
//--------------------------------------------------------------
// 内容に変更があった場合のみ保存します。
//--------------------------------------------------------------

void		InputHisSave(char *path,strInpHis **inphis);


//==============================================================
// 入力履歴にリストを追加
//--------------------------------------------------------------
// 同じ内容があった場合は二重登録はしない。
// 先頭位置に登録されます。
// リストの数がLISTMAX個を超えた場合は一番古いリストが削除されます。
// メモリが取得出来なかった場合は何もしません。
//--------------------------------------------------------------

void InputHisAdd(strInpHis **inphis,char *text);


//==============================================================
// 入力履歴からリスト項目を取得
//--------------------------------------------------------------
// text   取得されたリスト内容（入力履歴）
// size   textのサイズ
// inphis 入力履歴
// index  取り出すリストの位置
// 戻り値 取得されたリストの実際の位置（先頭位置は0）
//--------------------------------------------------------------
// 履歴が無い場合はtextの内容に変化はありません。
// この時の戻り値は-1です。
// 履歴のリスト数を超えた位置を指定された場合、最後のリスト内容が返されます。
//--------------------------------------------------------------

int InputHisGet(char *text,int size,strInpHis **inphis,int index);


//==============================================================
// 文字列入力
//--------------------------------------------------------------
// title   タイトル文字列
// size    入力欄の文字数（最大50文字まで）
// ime     入力ソース（0:Simple IME 以外:OSK）
// inStr   入力文字列の初期値
// outStr  文字入力結果
// inphis  入力履歴
// 戻り値     0:○ボタンで終了
//         以外:×ボタンでキャンセルされた
//--------------------------------------------------------------
// 汎用１ライン入力です。
// ダイアログ位置は指定できません。
// ○ボタンで終了した場合、outStrに入力文字列が返される。
// ×ボタンで終了した場合、outStrにはinStrが返される。
// ダイアログの背景は復元しないので、必要に応じて呼び出し側で再描写を行ってください。
//--------------------------------------------------------------

int			InputName(char *title,int size,int ime,char *inStr,char *outStr,strInpHis **inphis);

#endif
